# fiko's .zshrc
################################################################################
# ZSH config
################################################################################
export ZSH="$HOME/.oh-my-zsh"
# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions command-time)


################################################################################
# ASDF
################################################################################
# Required
export PATH="${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$PATH"

# Optional: completion
# append completions to fpath
fpath=(${ASDF_DATA_DIR:-$HOME/.asdf}/completions $fpath)
# initialise completions with ZSH's compinit
autoload -Uz compinit && compinit




### DEFAULT ###





# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.


export KERL_CONFIGURE_OPTIONS="--enable-jit" 
export EDITOR="code -w"


# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder



source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"















####Â OLD ZSHRC CONTENT BELOW - IGNORE ####






# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

################################################################################
# Inital components
################################################################################
#autoload -Uz compinit
#compinit

## Path to your oh-my-zsh installation.
#export ZSH="$HOME/.oh-my-zsh"


################################################################################
# ZSH Execution Time counter
################################################################################

# If command execution time above min. time, plugins will not output time.
#ZSH_COMMAND_TIME_MIN_SECONDS=3

# Message to display (set to "" for disable).
ZSH_COMMAND_TIME_MSG="Execution time: %s sec"

# Message color.
ZSH_COMMAND_TIME_COLOR="cyan"

# Exclude some commands
#ZSH_COMMAND_TIME_EXCLUDE=(vim mcedit)

################################################################################
# ZSH Config options. Themes, etc.
################################################################################

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

################################################################################
# ZSH Plugins to load
################################################################################

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#plugins=(git zsh-autosuggestions command-time)


################################################################################
# User configuration
################################################################################

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi


# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


###### MAC OS CLANG OVERRIDES #####

# One option is to create aliases, but this 
#alias gcc='gcc-13'
#alias cc='gcc-13'
#alias g++='g++-13'
#alias c++='c++-13'


#    ln -fs /usr/local/bin/gcc-10 /usr/local/bin/cc
#    ln -fs /usr/local/bin/gcc-10 /usr/local/bin/gcc
#    ln -fs /usr/local/bin/g++-10 /usr/local/bin/g++
#    ln -fs /usr/local/bin/c++-10 /usr/local/bin/c++

#    ln -fs /usr/local/bin/gcc-10 /usr/local/bin/cc
#    ln -fs /usr/local/bin/clang /usr/local/bin/gcc
#    ln -fs /usr/local/bin/clang++ /usr/local/bin/g++
#    ln -fs /usr/local/bin/c++-10 /usr/local/bin/c++

#export CC="clang"
#export CXX="clang++"
#
#export PATH="/usr/local/bin/:$PATH"
#export PATH=/opt/local/bin:/opt/local/sbin:$PATH

################################################################################
# PATH and Package Managers ~ asdf, brew
################################################################################

#export PATH="/usr/local/opt/openjdk@11/bin:$PATH"

#. /usr/local/opt/asdf/libexec/asdf.sh
#export PATH="/usr/local/opt/autoconf@2.69/bin:$PATH"
#export PATH="/usr/local/opt/autoconf@2.69/bin:$PATH"
#export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
#export PATH="/Users/robertfiko/Installs/prolog/bin/:$PATH"

#export PATH="/Users/robertfiko/.asdf/installs/erlang/22.0/bin/:$PATH"
#export PATH="/usr/local/bin/:$PATH"

#export PATH="$PATH:/usr/local/sbin"
#export PATH="$PATH:/Users/robertfiko/Library/Python/3.8/bin"
#export PATH="$PATH:/Users/robertfiko/Library/Python/3.9/bin"

# ECTO Database
#export DATABASE_URL=ecto://robertfiko:@localhost/security_report
#export LICENSE_DATABASE_URL=ecto://robertfiko:@localhost/license_service

#### ERLANG EXPORTS ####

# For Erlang 22 via asdf
#export PATH="/Users/robertfiko/.asdf/installs/erlang/22.0/bin/:$PATH"

################################################################################
# Erlang - erlv
################################################################################
# erlang shared history
#export ERL_AFLAGS="-kernel shell_history enabled"

# DISABLED BECAUSE MACHINE IS VERY OLD

#ERLV_LIVE=false
#ERLVSN_VISIBLE=true
#ERLVSN="??"



# function erlv_short() {
#     #ERL_EVAL_SHORT="'Otp = erlang:system_info(otp_release), io:fwrite(Otp), halt().'"
#     erl -eval 'Otp = erlang:system_info(otp_release), io:fwrite(Otp), halt().' -noshell
# }
# 
# function erlv_short_super() {
#     erlv_short | sed -e 'y|0123456789|â°Â¹Â²Â³â´âµâ¶â·â¸â¹|'
# }
# 
# function erlv_long() {
#     #ERL_VSN_EVAL_EXPR="'{ok, Version} = file:read_file(filename:join([code:root_dir(), \"releases\", erlang:system_info(otp_release), \"OTP_VERSION\"])), io:fwrite(Version), halt().'"
#     erl -eval '{ok, Version} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), io:fwrite(Version), halt().' -noshell
# }
# 
# function erlv() {
#     if [ $# -eq 0 ] ; then
#         erlv_long
#     else
#         case $1 in
#             ss|supershort)
#                 erlv_short_super
#                 ;;
# 
#             s|short)
#                 erlv_short
#                 ;;
# 
#             l|long)
#                 erlv_long
#                 ;;
#             
#             h|hide)
#                 erlv off
#                 ERLVSN_VISIBLE=false
#                 ;;
#             
#             v|show|visible)
#                 ERLVSN_VISIBLE=true
#                 ;;
# 
#             0|on|live)
#                 erlv show
#                 ERLV_LIVE=true
#                 ;;
# 
#             1|off)
#                 ERLV_LIVE=false;
#                 echo 'Erlang live version tracking turned off.'
#                 ;;
#             
#             
# 
#             *)
#                 echo "Options: s ss l h v 0 1 (short, supershort, long, hide, visible (show), on, off ) defuault is long" 
#                 ;;
#         esac
#     fi
# }
# 
# 
# function erl_vsn() {
#     if [ "$ERLVSN_VISIBLE" = true ] ; then
#         erl_vsn_display
#     else
#         echo ""
#     fi
# }
# 
# function erl_vsn_display() {
#     if [ "$ERLV_LIVE" = true ] ; then
#         echo "á$(erlv ss)"
#     else
#         echo "á¦$ERLVSN"
#     fi
# }

################################################################################
# ALIASES
################################################################################


# Putting asdf earlier in PATH
# alias asdfp='export PATH="/Users/robertfiko/.asdf/installs/erlang/22.0/bin/:$PATH"; export ERLVSN="$(erlv ss)"'

# Putting brew earlier in PATH
# alias brewp='export PATH="/usr/local/bin/:$PATH"; export ERLVSN="$(erlv ss)"'

#function githelp() {
#    echo "Hello, $USER. Here are some useful git aliases:"
#    echo "gitpr <PR number> - checkout a PR from GitHub"
#    echo "gitwa <remote> <branch> - add an existing branch as a worktree"
#    echo "gitwnew <remote> <branch> - create a new branch with a worktree"
#    echo "gitwrm <branch> - remove a worktree (works for PR checkouts)"
#}

# Checking out a PR from GitHub. params: PR number
#alias gitpr='gitpr() {git fetch upstream pull/$1/head && git worktree add ./$1 FETCH_HEAD;}; gitpr'

# Add an existing branch as a worktree: gitwa remote branch_name
#alias gitwa='gitwa() {git worktree add --track -b $2 ./$2 $1/$2 && echo "$2 checked out"}; gitwa'

# Create a new branch with a worktree
#alias gitwnew='gitwnew() {git worktree add ./$2 $1 -b $2 && echo "$2 checked out"}; gitwnew'

# Remove a worktree (works for PR checkouts)
#alias gitwrm='gitwrm() {git worktree remove ./$1;}; gitwrm'

# Setup the alias locally, so you don't need to restart the terminal when setting this up
#alias config='/usr/bin/git --git-dir=$HOME/dotfiles/.git --work-tree=$HOME/dotfiles'


################################################################################
# Final Setups
################################################################################

# Erlang Live Version Tracking
# export ERLVSN="$(erlv ss)"
# ERLVSN="$(erlv ss)"

# Load Angular CLI autocompletion.
#source <(ng completion script)

# OH-MY-ZSH
#source $ZSH/oh-my-zsh.sh

# Generated for envman. Do not edit.
#[ -s "$HOME/.config/envman/load.sh" ] && source "$HOME/.config/envman/load.sh"


#alias python=python3


######Â CABAL EXPORTS ######
# export PATH="/Users/robertfiko/.cabal/store/ghc-9.4.4/Agd-2.6.3-a34b3218/bin:$PATH"



######## EIFFEL ##########
# export ISE_EIFFEL=/usr/local/Eiffel_23.09
# export ISE_PLATFORM=macosx-x86-64
# export PATH=$PATH:$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin
# 
# [ -f "/Users/robertfiko/.ghcup/env" ] && source "/Users/robertfiko/.ghcup/env" # ghcup-env


# POSTGRES
#export POSTGRES_USER=robertfiko
#export POSTGRES_PASSWORD=""

# .direnv
#eval "$(direnv hook zsh)"


# DEMO Fox - Elixir v2
#alias safe="~/Projects/safe/optimize_source_files/_build/prod/rel/safe_cli/safe"
#export SAFE_CI_CONFIG_PATH="/Users/robertfiko/Projects/fox/.safe/config.json" 
#export SAFE_LICENSE="eyJsaWNlbnNlIjp7ImZpbmdlcnByaW50Ijoibm9fZmluZ2VycHJpbnQiLCJsaWNlbnNlX2lkIjoiZWYyMWEzNWEtZTUzOC00NmFiLWFmOTktZmM1MGJhZWM2NzgzIiwibGluZXNfb2ZfY29kZSI6MTAwLCJ0eXBlIjoiZmxhdCIsInZhbGlkaXR5X2VuZCI6IjIwMjUtMTItMzFUMjM6NTk6NTlaIiwidmVyc2lvbiI6InYyIn0sInNpZ25hdHVyZSI6Ik1FWUNJUUN3K1NFRVF2d1JGZGRHbDl0MGNXLzc0My84Rzl0VTN1eXJrVnhjWHFPMTJRSWhBSlpHZisrTnRqQU1UMVQ1Rmw4MHVZaWlZK210T0JDQ2t3bW9OcVloRllOeiJ9"

#export PATH="/usr/local/opt/node@22/bin:$PATH"
